load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config")
load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_js//js:defs.bzl", "js_run_binary", "js_run_devserver" ,"js_image_layer", "js_binary")
load("@npm//frontend:next/package_json.bzl", next_bin = "bin")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball", "oci_push")



npm_link_all_packages(
    name = "node_modules"
)

next_bin.next_binary(
    name = "next_js_binary",
)
ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//visibility:public"],
)

js_library(
    name = "packagejson",
    srcs = ["package.json"],
    visibility = ["//visibility:public"],
)

js_run_binary(
    name = "build",
    tool = "next_js_binary",
    args = ["build"],
    srcs = [
        "next.config.js",
        "//frontend:node_modules/next",
        "//frontend:node_modules/react",
        "//frontend:node_modules/react-dom",
        "//frontend:node_modules/typescript",
        "//frontend/src/app:pages",
        "//frontend/src/app:styles",
        "//frontend/public:public",
    ],
    out_dirs = [".next"],
    visibility = ["//visibility:public"],
    chdir = "frontend",
)


js_run_devserver(
    name = "dev",
    args = ["dev"],
    command = "./node_modules/.bin/next",
    chdir = "frontend",
    data = [
        "next.config.js",
        "//frontend:node_modules/next",
        "//frontend:node_modules/react",
        "//frontend:node_modules/react-dom",
        "//frontend:node_modules/typescript",
        "//frontend/src/app:pages",
        "//frontend/src/app:styles",
        "//frontend/public:public",
    ],
)

js_library(
    name = "jestconfig",
    srcs = ["jest.config.js"],
    visibility = ["//visibility:public"],
)


genrule(
    name = "nodemodules",
    outs = ["node_modules.tar"],
    srcs = [
        "//frontend:node_modules",
    ],
    cmd_bash = """
    tar hcvf "$@" --transform 's|$(RULEDIR)||' $(SRCS)
    """
)


pkg_tar(
    name = "nextfolder",
    strip_prefix = ".",
    srcs = [":build"] 
)

oci_image(
    name = "frontend-image",
    base = "@distroless_nodejs",
    entrypoint = [
        "./node_modules/.bin/next",
        "start"
    ],
    tars = ["node_modules.tar" , ":nextfolder"],
    visibility = ["//visibility:public"]
)
# Run a local container with:
# $ bazel run  //frontend:frontend-tarball
# $ docker run --rm bazel/frontend:latest
oci_tarball(
    name = "frontend-tarball",
    image = ":frontend-image",
    repo_tags = ["bazel/frontend:latest"],
)

oci_push(
    name = "push_frontend_image",
    image = ":frontend-image",
    repository="aa"
)

